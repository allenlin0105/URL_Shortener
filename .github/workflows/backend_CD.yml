name: Build and Deploy Backend to GKE
on:
  push:
    paths:
      - '**/backend/**'

# Environment variables
env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT_ID }}
  SA_KEY: ${{ secrets.GKE_SA_KEY }}
  CLUSTER_NAME: test
  CLUSTER_ZONE: asia-east1-a
  DEPLOYMENT_NAME: gke-hello-app
  IMAGE: backend

jobs:
  build-and-deploy:
    name: Build & Push Image, Deploy Backend
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Setup gcloud CLI
      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ env.SA_KEY }}

      # Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      - name: Configure docker
        run: gcloud --quiet auth configure-docker
    
      # Get the GKE credentials so we can deploy to the cluster
      - name: Get the GKE credentials
        uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.CLUSTER_NAME }}
          location: ${{ env.CLUSTER_ZONE }}
          credentials: ${{ env.SA_KEY }}
      
      - name: Test GKE credentials
      - run: echo $KUBECONFIG

      # Build and Push the Docker image
      - name: Build and push the docker image
        run: |
          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE" $IMAGE
          docker push "gcr.io/$PROJECT_ID/$IMAGE"
        
      # - name: Create Pods
      #   run: |
      #     kubectl create -f pod.yaml
      #     kubectl get pods
  
      # - name: Deploy Service
      #   run: |
      #     kubectl apply -f deployment.yml
      #     kubectl rollout status deployment/$DEPLOYMENT_NAME
      #     kubectl get services -o wide
